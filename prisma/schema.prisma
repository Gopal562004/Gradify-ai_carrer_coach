generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Change to your database provider
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  clerkUserId  String    @unique
  email        String    @unique
  name         String?
  imageUrl     String?
  industry     String?   
  IndustryInsight   IndustryInsight? @relation(fields: [industry], references: [industry])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  bio          String?
  experience   Int?
  skills       String[]

  resumes      Resume?
  coverLetters CoverLetter[]
  assessments  Assessment[]
}

model Resume {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  content   String
  atsScore  Float?
  feedback  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model CoverLetter {
  id            String   @id @default(cuid())
  userId        String
  content       String
  jobDescription String
  companyName   String
  jobTitle      String
  status        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
}

model Assessment {
  id            String    @id @default(cuid())
  userId        String
  user         User      @relation(fields: [userId], references: [id])
  quizScore     Float
  questions     Json
  category      String
  improvementTip String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt 

  @@index([userId])
}

model IndustryInsight {
  id               String   @id @default(cuid())
  industry         String   @unique
  users           User[]
  salaryRanges     Json[]
  growthRate       Float
  demandLevel      demandLevel 
  topSkills        String[]
  marketOutlook    marketOutlook
  keyTrends        String[]
  recommendedSkills String[]
  lastUpdated      DateTime
  nextUpdate       DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([industry])
}
enum demandLevel{
  HIGH
  MEDIUM
  LOW
}
enum marketOutlook{
  POSITIVE
  STABLE
  NEGATIVE
}